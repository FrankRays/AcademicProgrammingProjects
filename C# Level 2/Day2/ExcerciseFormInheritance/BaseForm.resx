<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhMgAxAPQAAMzO0ACM0QBtuPP2962vsmLN9omKjCTE9NTv/J+62wC88nOFq4XU9laAsQCl5pSX
        n7rm+wB9xb7AwqHc+Ht9f3Ow3t3e4DxzrwCZ3ULH9ACy8J+hpCmj3CS16SmJwf///yH5BAEAAB8ALAAA
        AAAyADEAAAX/4CeOZGmeaKqu32ABEiET22NvksXupwsAFstgSBy+CA+DZMDbDWDConRqIRgIzCYKQIgS
        X5KwWAIsVilLLWlAWH5jj8WiQafLH+2g0LIx6NQWD15VcR4BGA4OGokYGAERFwt4QEESFABaAIJGEg8N
        AYoZDBMIpRATBQcajgKSOUEAaDwABkQAGwugChkFBaMQwBMMvRmqGBGtG5S0EiwWFFGdHhgaBcK9vhPa
        wwUZxQoKGo8NDzk/lyoD0EOdugy/3djv2N/g4ccX5T+WfycGAC46RXCgoNe8A96w+WJQz56GRZD0cal1
        opOPBwM1KDjQzR5Cb94QMLDn8CHECzh+/+AxoU7PhmkESco8cEDBhAEFZJp86ACDgAbKYEArISMIgVyJ
        NIZTKrPAkJwlTSZyEKBVm1sb1kB7gRGRop1M7SEYMhIc2KmNIOEIM1SEhA1GPzWaCpbpzSET6i5Cy2pB
        m04ERvzjGuHQ3KR1nQ4Yi2CpVL6O1IYhQIGJBT9cFhRudPirSQWMS+HcObVnowCPrLLV0enHhguFDXf2
        fLeU7ceMTqOu2uDvykmdBMSW7XVqhtC2RZY27Wg3MpSTsyqBoXk4ca8aICBP3iG3btQRkAnAE+bBBzSZ
        hVu/zmB7cgjMm4MPj8xv+fMwCDRQv56zA+2LJWeKSN/NR59qnZw32f9+9IW3227tDSEgMBRS9WCD4tmX
        IBoxXCAAfw7uhgGA71F4yinOYfghguZxqN+KGMZWAQQSImDiKdpMAAEHMa74oYYtLuhjjBEwQKONJuYo
        jI4MqOijarcoGMMCT4IYASmLBaPkO++ccmCV471inhJTggkjlkjiyOUwRk4gnpkEAKHJB+QFZ2Z4Eaap
        5jxtvlnlBWRY8NYHnUzmYZX0VcCYlsJwaQ0ETfrp4wKBrnTZZFQ+SV8AHByZ45rY6FjBI+FVmVIsmHxA
        5luahohBhI1yQ4yR8BnoI6D7VCYCEmRIkCl/qM2lnUgKeWMkgc19GSYZD2QlgjpyEvDhprI5kAH/MMN4
        w5GOCEzAnK2AitGWCDjA8oB6wR6mwbWncKnjKXuZNp8Af3Vi3hp+vABAA65i95ACtFKIylK5gdeKGJT1
        MwIN+krgwWb+hsVLR2bxJO9P+VkSmD9k7LMZYmHJRNJjPjUwWScUnXDZD/sYgpjINNGk00PHNJAfDeOe
        gCoMP1SAyGfgJERMBlEd88DNlKWqgiVjAJDAz2CJTFoAHiTAhQwbyLID02IA4bMiUTG1CNVWx7DB2f9o
        YQkOMgSaQAUcONDB3HMvgoEHFSRwxNlnC6LGB89cMUOgLyTwdgV5W10JDXxvgMXfz2aNxwxt/wALDGY3
        7rgQkJNwGQUGOM64F+Y1NH5DGp2bwIcBrNvQLN+ut15uEyEAADs=
</value>
  </data>
</root>